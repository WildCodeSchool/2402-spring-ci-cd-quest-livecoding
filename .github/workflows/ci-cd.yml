name: Continuous Integration (CI)

on:
  push:
    branches:
      - main
      - dev
      - feature/*
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    name: Build and Test Application
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v3

      - name: ðŸ”§ Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: ðŸš€ Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: âœ… Build and run tests
        env:
          SPRING_PROFILES_ACTIVE: test
        run: ./mvnw clean test
  deploy:
    name: Deploy Application
    needs: build-and-test  # DÃ©ployer si les tests rÃ©ussissent
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Si dÃ©ployer sur main uniquement

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519_wildblog
          chmod 600 ~/.ssh/id_ed25519_wildblog
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: ssh -i ~/.ssh/id_ed25519_wildblog -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "echo 'SSH connection successful!'"

      - name: Clone or update project on server
        run: |
          ssh -i ~/.ssh/id_ed25519_wildblog -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
          if [ -d /home/${{ secrets.SERVER_USER }}/wildblog-api ]; then
            if [ -d /home/${{ secrets.SERVER_USER }}/wildblog-api/.git ]; then
              echo 'Repository already exists. Pulling latest changes...';
              cd /home/${{ secrets.SERVER_USER }}/wildblog-api;
              git reset --hard;
              git pull origin main;
            else
              echo 'Invalid directory exists. Cleaning up and cloning again...';
              rm -rf /home/${{ secrets.SERVER_USER }}/wildblog-api;
              git clone git@${{ secrets.REPOSITORY_NAME }} /home/${{ secrets.SERVER_USER }}/wildblog-api;
            fi
          else
            echo 'Cloning repository...';
            git clone git@${{ secrets.REPOSITORY_NAME }} /home/${{ secrets.SERVER_USER }}/wildblog-api;
          fi
          "

      - name: Generate .env file on server
        run: |
          ssh -i ~/.ssh/id_ed25519_wildblog -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
          echo 'SPRING_PROFILES_ACTIVE=prod' > /home/${{ secrets.SERVER_USER }}/wildblog-api/.env.prod &&
          echo 'DB_NAME=${{ secrets.DB_NAME }}' >> /home/${{ secrets.SERVER_USER }}/wildblog-api/.env.prod &&
          echo 'SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}' >> /home/${{ secrets.SERVER_USER }}/wildblog-api/.env.prod &&
          echo 'SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}' >> /home/${{ secrets.SERVER_USER }}/wildblog-api/.env.prod &&
          echo 'SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}' >> /home/${{ secrets.SERVER_USER }}/wildblog-api/.env.prod &&
          echo 'SPRING_JPA_HIBERNATE_DDL_AUTO=${{ secrets.SPRING_JPA_HIBERNATE_DDL_AUTO }}' >> /home/${{ secrets.SERVER_USER }}/wildblog-api/.env.prod &&
          chmod 600 /home/${{ secrets.SERVER_USER }}/wildblog-api/.env.prod
          "

      - name: Build Docker image and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "
          cd /home/ubuntu/wildblog-api &&
          docker compose down &&
          docker compose --env-file .env.prod up -d --build
          "